name: create-release

on:
  pull_request:
    branches: [ develop ]

jobs:
  create_darwin_binary:
    name: Create release
    # runs-on: ubuntu-latest
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
    
    env:
      file_name: |
        ${{ (matrix.python-version == '3.7' &&
            'test_37.zip') ||
          (matrix.python-version == '3.8' &&
            'test_38.zip') ||
          'test_39.zip' }}
      # python_ver: ${{ '39' }}
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install nuitka==0.6.19


    - name: Bring module binary
      run: |
        python gen.py $(pwd)
        mv op.cp* ./../test
      working-directory: ./test_lib/

    - name: test_output
      run: |
        python test.py
      working-directory: ./test/
      
    - name: test to ${{ env.file_name }}
      uses: vimtor/action-zip@v1
      with:
        files: test
        dest: ${{ env.file_name }}
  
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        generate_release_notes: true
        files: ${{ env.file_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


# name: Create Release

# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - release

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@master
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.event.pull_request.title }}
#           release_name: ${{ github.event.pull_request.title }}
#           body: ${{ github.event.pull_request.body }}
#           draft: false
#           prerelease: false

# name: create-release

# on:
#   pull_request:
#     branches: [ develop ]

# jobs:
#   create-release:
#     name: Create release
#     runs-on: ubuntu-latest
#     if: contains(github.head_ref, 'release')
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - name: Release
#         uses: softprops/action-gh-release@v1
#         with:
#           name: ${{ github.event.pull_request.body }}
#           tag_name: ${{ github.event.pull_request.title }}
#           generate_release_notes: true
#           files: test/Pipfile
#           token: ${{ secrets.GITHUB_TOKEN }}


# name: create-release

# on:
#   pull_request:
#     branches: [ develop ]

# jobs:
#   create-release:
#     name: Create release
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - name: Release
#         uses: softprops/action-gh-release@v1
#         with:
#           name: ${{ github.event.pull_request.body }}
#           tag_name: ${{ github.event.pull_request.title }}
#           generate_release_notes: true
#           files: test_lib/*
#           repository: KotaTakahashi9320/Lattice-based-crypto
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}